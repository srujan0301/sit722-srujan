name: CI Pipeline (Testing Branch)

on:
  push:
    branches: [ testing ]

permissions:
  contents: read

env:
  ACR_NAME: srujanacr102d
  ACR_LOGIN_SERVER: srujanacr102d.azurecr.io

jobs:
  tests:
    name: Run backend unit tests (pytest)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [customer_service, order_service, product_service]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        working-directory: backend/${{ matrix.service }}
        run: |
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run pytest
        working-directory: backend/${{ matrix.service }}
        run: pytest -q

  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      # Build all services locally in runner
      - name: Build customer_service
        run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/customer_service:testing ./backend/customer_service

      - name: Build order_service
        run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:testing ./backend/order_service

      - name: Build product_service
        run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:testing ./backend/product_service

      - name: Build frontend
        run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:testing ./frontend

      - name: Note about push
        run: |
          echo "âš  Skipping ACR push here (blocked by student Azure policy)"
          echo "ðŸ‘‰ Push manually from local Docker CLI after this job."

  staging:
    name: Ephemeral Staging Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Start staging with Docker Compose
        run: |
          docker compose up -d
          sleep 15
          curl -f http://localhost:8080 || (docker compose logs && exit 1)

      - name: Tear down staging
        if: always()
        run: docker compose down
